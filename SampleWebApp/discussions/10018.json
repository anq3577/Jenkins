[
  {
    "Id": "32519",
    "ThreadId": "10018",
    "Html": "\r\nHi all,<br /><br />When I am on the view.aspx page and click on the \"Add this event to your personal calendar\" link and Open the downloaded ICalendar File, \"download.ics\", I get something the following:<br /><br />&lt;p&gt;test&lt;/p&gt;<br /><br />Event URL: http://www.host.com/club/events/view.aspx?Eventid&#x18;<br /><br />The event URL is highlighted in MS Outlook and when I click on it, it brings up the following page:<br /><br />http://www.host.com/club/events/view.aspx?Eventid%18<br /><br />The Event page is then blank because the Eventid has percent between \"Eventid\" and \"18\"  it should be,<br />http://www.host.com/club/events/view.aspx?Eventid=18<br /><br />I have scoured through the Events/download.ashx, Events/view.aspx and Events/edit.aspx code and can't find the problem...<br /><br />If I change the \"%\" to and \"=\" sign in IE7 Address bar, it displays the correct page.<br /><br />Does anyone else experience this problem?  Any help would be appreciated.<br /><br />Thanks.<br />",
    "PostedDate": "2007-05-08T13:02:45.437-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "32614",
    "ThreadId": "10018",
    "Html": "\r\nHere is another interesting tidbit.  If I download the file instead of opening it with outlook and open it with notepad, the links look like they were built just fine:<br /><br />BEGIN:VCALENDAR<br />VERSION:2.0<br />PRODID:<b>http://www.host.com/club/events/view.aspx?Eventid=17</b><br />METHOD:PUBLISH<br />BEGIN:VEVENT<br />UID:0fb288e9-4574-40f1-95f9-ca2bee28ded6<br />DTSTAMP:20070509T131134Z<br />CATEGORIES:APPOINTMENT;PERSONAL<br />DESCRIPTION;ENCODING=QUOTED-PRINTABLE:&lt;p&gt;Hi all,&lt;/p&gt;=0D=0A&lt;p&gt;This is the title=<br /> of the event.&lt;/p&gt;==<br />0D=0A=0D=0AEvent URL: http://www.host.com/club/events/view.a=<br />spx?Eventid=17=0D=0A=0D=0AEvent location: Here=0D=0A=0D=0ALoca=<br />tion description:=0D=0A&lt;p&gt;this is a location.&lt;/p&gt;=0D=0A=0D=0ALocati=<br />on Address:=0D=0ASomewhere=0D=0A<br />DTEND:20070507T190000Z<br />LOCATION;ENCODING=QUOTED-PRINTABLE:This is a location<br />PRIORITY:0<br />DTSTART:20070507T185000Z<br />STATUS:NEEDS ACTION<br />SUMMARY;ENCODING=QUOTED-PRINTABLE:This is the notes<br /><b>URL:http://www.host.com/club/events/view.aspx?Eventid=17</b><br />END:VEVENT<br />END:VCALENDAR<br /><br />When Outlook 2003 opens the download.ics file, the link ends up looking like this:<br /><br /><b>Event URL: http://www.host.com/club/events/view.aspx?Eventid&#x17;</b>  - note the square at the end this is how it looks in the outlook application.  <br /><br />When you click on the link from within outlook it shows this in the address bar of Internet Explorer 7:<br /><br /><b>http://www.host.com/club/events/view.aspx?Eventid%17</b><br /><br />Strange behavior.  Any Ideas?<br /><br />Thanks.<br />",
    "PostedDate": "2007-05-09T06:18:59.483-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "32939",
    "ThreadId": "10018",
    "Html": "\r\nI am no ICalendar expert.... when in doubt, consult the docs. Let me do some research.<br />",
    "PostedDate": "2007-05-11T14:54:45.3-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "33407",
    "ThreadId": "10018",
    "Html": "\r\nHi z2bass,<br /><br />I've figured it out with much trial and error.  Below is the code that works for me in Outlook 2003.  I have no idea what that \"DO while offset\" code does, but once I removed it and took a look at how MS outlook stores the ical file, I was able to get it to work.<br /><br />Code module name: Events/Download.ashx<br /><br />&lt;%@ WebHandler Language=\"VB\" Class=\"DownloadEvent\" %&gt;<br /><br />Imports System.Web<br />Imports System.Data.SqlClient<br /><br />'The idea behind this is to simply fetch the image out of the database and stream it down the network.<br />Public Class DownloadEvent : Implements IHttpHandler<br /><br />    Const BUFFERSIZE As Integer = 1024<br /><br />    Public ReadOnly Property IsReusable() As Boolean Implements IHttpHandler.IsReusable<br />        Get<br />            Return True<br />        End Get<br />    End Property<br /><br />    Public Sub ProcessRequest(ByVal context As HttpContext) Implements IHttpHandler.ProcessRequest<br />        Dim response As Web.HttpResponse = context.Response<br />        Dim request As Web.HttpRequest = context.Request<br />        response.BufferOutput = True<br />        response.ContentType = \"text/calendar\"<br />        response.Cache.SetCacheability(HttpCacheability.NoCache)<br />        Dim EventID As Integer = CInt(request.QueryString(\"EventID\"))<br /><br />        Dim viewurl As New Uri(context.Request.Url, \"view.aspx?Eventid=\" &amp; EventID)<br />        writeCalEntry(EventID, response.Output, viewurl.ToString)<br /><br />        response.End()<br />    End Sub<br /><br />    Public Sub writeCalEntry(ByVal EventID As Integer, ByVal output As IO.TextWriter, ByVal url As String)<br />        Dim connection As New SqlConnection(ConfigurationManager.ConnectionStrings(\"ClubSiteDB\").ConnectionString)<br />        Dim qry As String = \"SELECT     Events.starttime, Events.endtime, Events.title, Events.description, Events.staticURL, Locations.title AS LocName, Locations.directions, \"<br />        qry &amp;= \"Locations.description AS locDesc, Locations.address \"<br />        qry &amp;= \"FROM Locations RIGHT OUTER JOIN \"<br />        qry &amp;= \"Events ON Locations.id = Events.location \"<br />        qry &amp;= \"WHERE     (Events.id = @id)\"<br /><br />        Dim command As New SqlCommand(qry, connection)<br />        Dim param0 As New Data.SqlClient.SqlParameter(\"@id\", Data.SqlDbType.Int)<br />        param0.Value = EventID<br />        command.Parameters.Add(param0)<br />        connection.Open()<br /><br />        Dim dt As New Data.DataTable()<br />        dt.Load(command.ExecuteReader)<br /><br />        If dt.Rows.Count &gt; 0 Then<br />            Dim dr As Data.DataRow = dt.Rows(0)<br /><br />            Dim starttime, endtime As Date<br />            Dim title, description, location As String<br />            Dim sb As New Text.StringBuilder()<br />            Dim o As Object<br /><br />            starttime = CDate(dr(\"starttime\"))<br />            If Not IsDBNull(dr(\"endtime\")) Then endtime = CDate(dr(\"endtime\")) Else endtime = starttime<br />            If Not IsDBNull(dr(\"title\")) Then title = CStr(dr(\"title\")) Else title = \"An untitled clubsite event\"<br /><br />            o = dr(\"description\")<br />            If Not IsDBNull(o) AndAlso CStr(o) &lt;&gt; \"\" Then<br />                sb.AppendLine(CStr(dr(\"description\")))<br /><br />            End If<br /><br />            sb.AppendLine()<br />            sb.Append(\"Event URL: \")<br /><br />            o = dr(\"staticURL\")<br />            If Not IsDBNull(o) AndAlso CStr(o) &lt;&gt; \"\" Then<br />                sb.AppendLine(CStr(o))<br />            Else<br />                sb.Append(url)<br />                sb.AppendLine()<br />            End If<br /><br />            o = dr(\"LocName\")<br />            If Not IsDBNull(o) AndAlso CStr(o) &lt;&gt; \"\" Then<br />                location = CStr(o)<br />                sb.AppendLine()<br />                sb.Append(\"Event location: \")<br />                sb.AppendLine(location)<br /><br />            Else<br />                location = Nothing<br />            End If<br /><br />            o = dr(\"locDesc\")<br />            If Not IsDBNull(o) AndAlso CStr(o) &lt;&gt; \"\" Then<br />                sb.AppendLine()<br />                sb.AppendLine(\"Location description:\")<br />                sb.AppendLine(CStr(o))<br /><br />            End If<br /><br />            o = dr(\"Address\")<br />            If Not IsDBNull(o) AndAlso CStr(o) &lt;&gt; \"\" Then<br />                sb.AppendLine()<br />                sb.AppendLine(\"Location Address:\")<br />                sb.AppendLine(CStr(o))<br /><br />            End If<br /><br />            o = dr(\"directions\")<br />            If Not IsDBNull(o) AndAlso CStr(o) &lt;&gt; \"\" Then<br />                sb.AppendLine()<br />                sb.AppendLine(\"Location Directions:\")<br />                sb.AppendLine(CStr(o))<br /><br />            End If<br /><br />            'Dim uc As New Text.UnicodeEncoding()<br />            'description = System.Convert.ToBase64String(uc.GetBytes(sb.ToString), Base64FormattingOptions.InsertLineBreaks)<br />            description = sb.ToString<br /><br />            output.WriteLine(\"BEGIN:VCALENDAR\")<br />            output.WriteLine(\"VERSION:2.0\")<br />            output.WriteLine(\"PRODID:\" &amp; url)<br />            output.WriteLine(\"METHOD:PUBLISH\")<br />            output.WriteLine(\"BEGIN:VEVENT\")<br />            output.WriteLine(\"UID:\" &amp; Guid.NewGuid().ToString)<br />            output.WriteLine(\"DTSTAMP:\" &amp; Now.ToUniversalTime.ToString(\"yyyyMMddTHHmmss\") &amp; \"Z\")<br />            output.WriteLine(\"DTEND:\" &amp; endtime.ToUniversalTime.ToString(\"yyyyMMddTHHmmss\") &amp; \"Z\")<br />            output.WriteLine(\"CATEGORIES:APPOINTMENT;PERSONAL\")<br />            'OLD CODE as of Version RC1 <br />            'output.WriteLine(EncodeProperty(\"DESCRIPTION;ENCODING=QUOTED-PRINTABLE:\", description))<br />            output.WriteLine(EncodeProperty(\"DESCRIPTION:\", description))<br />            'output.WriteLine(EncodeProperty64(\"DESCRIPTION;ENCODING=BASE64:\", description))<br />            If Not location Is Nothing Then<br />                output.WriteLine(EncodeProperty(\"LOCATION;ENCODING=QUOTED-PRINTABLE:\", location))<br />            End If<br />            output.WriteLine(\"PRIORITY:0\")<br />            output.WriteLine(\"DTSTART:\" &amp; starttime.ToUniversalTime.ToString(\"yyyyMMddTHHmmss\") &amp; \"Z\")<br />            output.WriteLine(\"STATUS:NEEDS ACTION\")<br />            output.WriteLine(EncodeProperty(\"SUMMARY;ENCODING=QUOTED-PRINTABLE:\", title))<br />            output.WriteLine(\"SUMMARY;ENCODING=QUOTED-PRINTABLE:\", title)<br />            output.WriteLine(\"URL:\" &amp; url)<br />            output.WriteLine(\"END:VEVENT\")<br />            output.WriteLine(\"END:VCALENDAR\")<br />        End If<br /><br />        connection.Close()<br />    End Sub<br /><br />    Function EncodeProperty(ByVal key As String, ByVal value As String) As String<br />        Dim sb As New Text.StringBuilder()<br />        sb.Append(key)<br />        sb.Append(value)<br />        sb.Replace(\";\", \"\\;\", key.Length, sb.Length - key.Length)<br />        sb.Replace(vbCrLf, \"\\n\")<br />        sb.Replace(\"&lt;p&gt;\", \"\")<br />        sb.Replace(\"&lt;/p&gt;\", \"\")<br /><br />        Return sb.ToString<br />    End Function<br />    'OLD CODE as of Version RC1<br />    'Function EncodeProperty(ByVal key As String, ByVal value As String) As String<br />    '    Dim sb As New Text.StringBuilder()<br />    '    sb.Append(key)<br />    '    sb.Append(value)<br />    '    sb.Replace(\";\", \"\\;\", key.Length, sb.Length - key.Length)<br />    '    sb.Replace(vbCrLf, \"=0D=0A\")<br />    '    sb.Replace(\"&lt;p&gt;\", \"\")<br />    '    sb.Replace(\"&lt;/p&gt;\", \"\")<br /><br />    '    Dim offset As Integer = 76<br /><br />    '    Do While offset &lt; sb.Length<br />    '        Dim pos As Integer = sb.ToString(offset - 5, 10).IndexOf(\"=0D=0A\")<br />    '        If pos = -1 Then<br />    '            'Account for the string at the end of where we want to insert<br />    '            sb.Insert(offset - 5 + pos, \"=\" &amp; vbCrLf)<br />    '            offset += 79 - 5 + pos<br />    '        Else<br />    '            sb.Insert(offset, \"=\" &amp; vbCrLf)<br />    '            offset += 79<br />    '        End If<br />    '    Loop<br />    '    Return sb.ToString<br />    'End Function<br /><br />    'Function EncodeProperty64(ByVal key As String, ByVal value As String) As String<br />    '    Dim sb As New Text.StringBuilder()<br />    '    sb.Append(key)<br />    '    Dim uc As New Text.UnicodeEncoding()<br />    '    sb.Append(System.Convert.ToBase64String(uc.GetBytes(value), Base64FormattingOptions.None))<br /><br />    '    Dim offset As Integer = 76<br /><br />    '    Do While offset &lt; sb.Length<br />    '        sb.Insert(offset, vbCrLf)<br />    '        offset += 78<br />    '    Loop<br />    '    Return sb.ToString<br />    'End Function<br /><br />End Class<br />",
    "PostedDate": "2007-05-15T13:22:50.387-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]